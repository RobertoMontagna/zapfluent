run:
  # The default timeout is 1 minute, but we can increase it to avoid timeouts on larger projects.
  timeout: 3m

linters:
  # We will explicitly enable the linters mentioned in the guidelines.
  # This ensures we are checking for the specified quality standards.
  enable:
    - errcheck      # Checks for unchecked errors, crucial for robust Go code.
    - gci           # A tool that controls Go package import order and makes it always deterministic.
    - govet         # Reports common mistakes and suspicious constructs.
    - staticcheck   # A suite of static analysis checks for bugs, performance issues, and simplification.
    - revive        # A modern, configurable replacement for golint.

  # It's good practice to disable linters that are not needed or are overly noisy.
  # For now, we will not disable any explicitly but will stick to the enabled set.

linters-settings:
  gci:
    # The `sections` option defines the order of import blocks.
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(go.robertomontagna.dev/zapfluent) # Project section: groups all imports with the specified Prefix.
    # The `custom-order` option makes the section order the same as the order of `sections`.
    custom-order: true

issues:
  exclude-rules:
    # Exclude specific linter rules from test files where they are not critical.
    - path: "_test.go"
      linters:
        - revive
      text: "dot-imports|unused-parameter"

# We can add more configuration here as needed, but this provides a solid baseline
# that directly reflects the project's development documentation.
